FROM node:8
MAINTAINER Rutebanken

RUN wget --quiet https://github.com/Yelp/dumb-init/releases/download/v1.0.1/dumb-init_1.0.1_amd64.deb
RUN dpkg -i dumb-init_*.deb
RUN npm set progress=false

RUN echo "deb http://ftp.us.debian.org/debian testing main contrib non-free" >  /etc/apt/sources.list.d/use_test_resource.list \
  && apt-get update \
  && apt-get install -y g++

RUN mkdir -p {{map_server_root}}

WORKDIR {{map_server_root}}

RUN echo '{}' > package.json && \
    npm install -g node-gyp
RUN   npm install --save mapnik@3.6.1 && \
      npm install --save tessera@0.11.2 && \
      npm install --save minimist@1.2.0 && \
      npm install --save tilelive-tmsource@0.6.1 && \
      npm install --save @mapbox/tilelive-vector@3.10.1 && \
      #npm install --save tilelive-xray@0.3.0 && \
      npm install --save @mapbox/tilejson@1.0.4 && \
      npm install --save tilelive-merge@1.1.2 && \
      npm install --save tilelive-streaming@0.7.7 && \
      npm install --save tilelive-modules@0.3.4 && \
      npm install --save tilelive-http@0.12.2 && \
      npm install --save tilelive-error@1.0.0 && \
      npm install --save tilelive-mapnik@0.6.18 && \
      npm install --save tilelive-solid@0.1.2 && \
      npm install --save tilelive-mapbox@0.5.0 && \
      npm install --save tilelive-utfgrid@0.2.0 && \
      npm install --save tilelive-tmstyle@0.7.0 && \
      npm install --save readable-stream
# Separate line in order to hope to use hash cache
# TODO Remove duplicate readable-stream above
RUN npm install --save readable-stream@2.3.3 && \
 npm install --save abbrev@1.1.0 && \
 npm install --save abbrev osenv@0.1.4

RUN npm install

# Forcing reset of source:
RUN echo "{{ansible_date_time.epoch}}" /build_time.txt

RUN git clone {{map_server_style_git}} {{map_server_style}}
WORKDIR {{map_server_style}}
RUN git checkout {{map_server_branch}}

RUN sed -i -e 's#source: "http://tiletest.kapsi.fi:8080/index.json"#source: "tilejson+http://vectormapserver:{{vector_map_server_exposed_port}}/hsl-vector-map/index.json\?timeout=0"#' project.yml

COPY config.json {{map_server_root}}/

WORKDIR {{map_server_root}}/

EXPOSE {{map_server_exposed_port}}

COPY vector_host_chooser.sh /vector_host_chooser.sh
RUN chmod a+x /vector_host_chooser.sh
ENTRYPOINT ["/vector_host_chooser.sh"]

CMD node --max-old-space-size={{mapserver_node_memory_limit}} node_modules/tessera/bin/tessera.js --port {{map_server_exposed_port}} --config config.json
